basePath: /
definitions:
  models.CreateUserDto:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  models.DecisionTreeInputs:
    properties:
      amountTotal:
        type: number
      cant:
        type: number
    type: object
  models.FailedOperation:
    properties:
      internalCode:
        type: string
      message:
        type: string
    type: object
  models.SucessfullOperation:
    properties:
      message:
        type: string
    type: object
  models.TargetParams:
    properties:
      max:
        type: integer
      name:
        type: string
      rate:
        type: number
    type: object
  models.TargetSchemaSwagger:
    properties:
      desicionTree:
        items:
          $ref: '#/definitions/models.Tree'
        type: array
      id:
        type: string
      targets:
        items:
          $ref: '#/definitions/models.TargetParams'
        type: array
      version:
        type: string
    type: object
  models.Tree:
    properties:
      content: {}
      headers:
        additionalProperties: true
        type: object
      id:
        type: integer
      key:
        type: string
      name:
        type: string
      operator:
        type: string
      order:
        type: integer
      parentId:
        type: integer
      value: {}
    type: object
  models.User:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server to manage payments
  title: Payment Simple API
  version: "1.0"
paths:
  /target-schema:
    get:
      description: Get lists of Target Schemas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.TargetSchemaSwagger'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.FailedOperation'
      summary: Get Target Schemas
      tags:
      - target-schema
  /target-schema/test-tree:
    post:
      consumes:
      - application/json
      description: Test Target Schema Decision Tree output with Cant and AmountTotal
      parameters:
      - description: payload
        in: body
        name: DecisionTreeInputs
        required: true
        schema:
          $ref: '#/definitions/models.DecisionTreeInputs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TargetParams'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedOperation'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.FailedOperation'
      summary: Test Target Schema Decision Tree
      tags:
      - target-schema
  /user:
    get:
      description: Get lists of users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.FailedOperation'
      summary: Get users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a user with his name
      parameters:
      - description: payload
        in: body
        name: CreateUserDto
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.SucessfullOperation'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.FailedOperation'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.FailedOperation'
      summary: Create User
      tags:
      - user
swagger: "2.0"
